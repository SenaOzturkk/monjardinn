{"ast":null,"code":"var _jsxFileName = \"/Users/senaozturk/monjardinadmin/monjardinn/src/Profil.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profil = () => {\n  _s();\n  const [adSoyad, setAdSoyad] = useState(\"\"); // Kullanıcının adı soyadı\n  const [telefon, setTelefon] = useState(\"\"); // Kullanıcının telefon numarası\n  const [eposta, setEposta] = useState(\"\"); // Kullanıcının e-posta adresi\n  const [sifre, setSifre] = useState(\"\"); // Kullanıcının şifresi\n\n  // Kullanıcının adı soyadı, telefon numarası, e-posta adresi ve şifresi gibi verileri burada fetch veya başka bir yöntemle getirebilirsiniz\n  useEffect(() => {\n    // Örnek bir API çağrısı ile kullanıcının profil verilerini getirme\n    const fetchProfilVerileri = async () => {\n      try {\n        // API çağrısını gerçekleştirme\n        const response = await fetch(\"API_URL\");\n        const data = await response.json();\n\n        // Kullanıcının profil verilerini state'e set etme\n        setAdSoyad(data.adSoyad);\n        setTelefon(data.telefon);\n        setEposta(data.eposta);\n        setSifre(data.sifre);\n      } catch (error) {\n        console.error(\"Profil verileri getirilirken hata oluştu: \", error);\n      }\n    };\n    fetchProfilVerileri();\n  }, []);\n\n  // Şifre değiştirme işlemini gerçekleştiren fonksiyon\n  const sifreDegistir = () => {\n    // Şifre değiştirme işlemini burada gerçekleştirin, örneğin API çağrısı ile güncel şifreyi gönderme\n    // ve güncelleme işlemini başarılı olduğunda state'i güncelleyerek güncel şifreyi gösterme\n    // setSifre(yeniSifre);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontStyle: \"italic\"\n      },\n      children: \"Profilim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ad\\u0131 Soyad\\u0131: \", adSoyad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Telefon: \", telefon]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"E-posta: \", eposta]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u015Eifre: \", sifre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sifreDegistir,\n      children: \"\\u015Eifreyi De\\u011Fi\\u015Ftir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Kay\\u0131tl\\u0131 Adreslerim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Profil, \"ppVmDjEPi1EJl0htUbHQ8UwBbjg=\");\n_c = Profil;\nexport default Profil;\nvar _c;\n$RefreshReg$(_c, \"Profil\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Profil","_s","adSoyad","setAdSoyad","telefon","setTelefon","eposta","setEposta","sifre","setSifre","fetchProfilVerileri","response","fetch","data","json","error","console","sifreDegistir","style","margin","children","textAlign","fontStyle","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/senaozturk/monjardinadmin/monjardinn/src/Profil.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Profil = () => {\n  const [adSoyad, setAdSoyad] = useState(\"\"); // Kullanıcının adı soyadı\n  const [telefon, setTelefon] = useState(\"\"); // Kullanıcının telefon numarası\n  const [eposta, setEposta] = useState(\"\"); // Kullanıcının e-posta adresi\n  const [sifre, setSifre] = useState(\"\"); // Kullanıcının şifresi\n\n  // Kullanıcının adı soyadı, telefon numarası, e-posta adresi ve şifresi gibi verileri burada fetch veya başka bir yöntemle getirebilirsiniz\n  useEffect(() => {\n    // Örnek bir API çağrısı ile kullanıcının profil verilerini getirme\n    const fetchProfilVerileri = async () => {\n      try {\n        // API çağrısını gerçekleştirme\n        const response = await fetch(\"API_URL\");\n        const data = await response.json();\n\n        // Kullanıcının profil verilerini state'e set etme\n        setAdSoyad(data.adSoyad);\n        setTelefon(data.telefon);\n        setEposta(data.eposta);\n        setSifre(data.sifre);\n      } catch (error) {\n        console.error(\"Profil verileri getirilirken hata oluştu: \", error);\n      }\n    };\n\n    fetchProfilVerileri();\n  }, []);\n\n  // Şifre değiştirme işlemini gerçekleştiren fonksiyon\n  const sifreDegistir = () => {\n    // Şifre değiştirme işlemini burada gerçekleştirin, örneğin API çağrısı ile güncel şifreyi gönderme\n    // ve güncelleme işlemini başarılı olduğunda state'i güncelleyerek güncel şifreyi gösterme\n    // setSifre(yeniSifre);\n  };\n\n  return (\n    <div style={{ margin: \"100px\" }}>\n      <h1  style={{ textAlign: \"center\", fontStyle:\"italic\" }}>Profilim</h1>\n      <p>Adı Soyadı: {adSoyad}</p>\n      <p>Telefon: {telefon}</p>\n      <p>E-posta: {eposta}</p>\n      <p>Şifre: {sifre}</p>\n      <button onClick={sifreDegistir}>Şifreyi Değiştir</button>\n      <h2>Kayıtlı Adreslerim</h2>\n      {/* Kullanıcının kayıtlı adreslerini burada listeleyebilirsiniz */}\n    </div>\n  );\n};\n\nexport default Profil;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,CAAC;QACvC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;;QAElC;QACAX,UAAU,CAACU,IAAI,CAACX,OAAO,CAAC;QACxBG,UAAU,CAACQ,IAAI,CAACT,OAAO,CAAC;QACxBG,SAAS,CAACM,IAAI,CAACP,MAAM,CAAC;QACtBG,QAAQ,CAACI,IAAI,CAACL,KAAK,CAAC;MACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IAEDL,mBAAmB,EAAE;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA;EAAA,CACD;EAED,oBACElB,OAAA;IAAKmB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC9BrB,OAAA;MAAKmB,KAAK,EAAE;QAAEG,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAC;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtE3B,OAAA;MAAAqB,QAAA,GAAG,wBAAY,EAAClB,OAAO;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5B3B,OAAA;MAAAqB,QAAA,GAAG,WAAS,EAAChB,OAAO;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzB3B,OAAA;MAAAqB,QAAA,GAAG,WAAS,EAACd,MAAM;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxB3B,OAAA;MAAAqB,QAAA,GAAG,cAAO,EAACZ,KAAK;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrB3B,OAAA;MAAQ4B,OAAO,EAAEV,aAAc;MAAAG,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACzD3B,OAAA;MAAAqB,QAAA,EAAI;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEvB;AAEV,CAAC;AAACzB,EAAA,CA/CID,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAiDZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}