{"ast":null,"code":"var _jsxFileName = \"/Users/senaozturk/monjardinadmin/monjardinn/src/AdminLogin.js\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom';\nimport { Redirect } from 'react-router-dom';\nimport Adminpanel from './Adminpanel';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminLogin() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirectToAdmin, setRedirectToAdmin] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // burada, kullanıcı adı ve şifreyi bir API'ye gönderip doğrulayabilirsiniz\n    // bu örnekte, doğrulama her zaman başarılı olur\n    setRedirectToAdmin(true);\n  };\n  if (redirectToAdmin) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Adminpanel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Kullan\\u0131c\\u0131 Ad\\u0131:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u015Eifre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminLogin, \"ClNdShor6yQwKq00uJ853Vrfkck=\");\n_c = AdminLogin;\n;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["ReactDOM","Redirect","Adminpanel","React","useState","jsxDEV","_jsxDEV","AdminLogin","_s","username","setUsername","password","setPassword","redirectToAdmin","setRedirectToAdmin","handleSubmit","event","preventDefault","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/senaozturk/monjardinadmin/monjardinn/src/AdminLogin.js"],"sourcesContent":["import ReactDOM from 'react-dom';\nimport { Redirect } from 'react-router-dom';\nimport Adminpanel from './Adminpanel';\nimport React, { useState } from 'react';\n\nexport default function AdminLogin() {\n\n\n   \n\n    \n      const [username, setUsername] = useState('');\n      const [password, setPassword] = useState('');\n      const [redirectToAdmin, setRedirectToAdmin] = useState(false);\n    \n      const handleSubmit = async (event) => {\n        event.preventDefault();\n        // burada, kullanıcı adı ve şifreyi bir API'ye gönderip doğrulayabilirsiniz\n        // bu örnekte, doğrulama her zaman başarılı olur\n        setRedirectToAdmin(true);\n      };\n      if (redirectToAdmin) {\n        return <Redirect to=\"/Adminpanel\" />;\n      }\n    \n      return (\n        <form onSubmit={handleSubmit}>\n          <label>\n            Kullanıcı Adı:\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(event) => setUsername(event.target.value)}\n            />\n          </label>\n          <label>\n            Şifre:\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </label>\n          <button type=\"submit\">Giriş Yap</button>\n        </form>\n      );\n    };\n    \n    \n\n    \n\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAM/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA;IACAH,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EACD,IAAID,eAAe,EAAE;IACnB,oBAAOP,OAAA,CAACL,QAAQ;MAACiB,EAAE,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACtC;EAEA,oBACEhB,OAAA;IAAMiB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BlB,OAAA;MAAAkB,QAAA,GAAO,+BAEL,eAAAlB,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,QAAS;QAChBkB,QAAQ,EAAGX,KAAK,IAAKN,WAAW,CAACM,KAAK,CAACY,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRhB,OAAA;MAAAkB,QAAA,GAAO,aAEL,eAAAlB,OAAA;QACEmB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEf,QAAS;QAChBgB,QAAQ,EAAGX,KAAK,IAAKJ,WAAW,CAACI,KAAK,CAACY,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRhB,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnC;AAEX;AAACd,EAAA,CAzCmBD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAyC7B;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}