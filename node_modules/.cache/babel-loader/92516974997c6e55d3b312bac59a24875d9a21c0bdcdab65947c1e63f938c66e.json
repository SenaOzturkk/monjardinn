{"ast":null,"code":"var _jsxFileName = \"/Users/senaozturk/monjardinadmin/monjardinn/src/AdminLogin.js\",\n  _s = $RefreshSig$();\nimport Adminpanel from './Home';\nimport React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminLogin() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirectToAdminpanel, setRedirectToAdminpanel] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // burada, kullanıcı adı ve şifreyi bir API'ye gönderip doğrulayabilirsiniz\n    // bu örnekte, doğrulama her zaman başarılı olur\n    setRedirectToAdminpanel(true);\n  };\n  const handleAdminPanelLoad = () => {\n    try {\n      // Burada Adminpanel bileşenini yükleyebilirsiniz. Eğer bir hata oluşursa, catch bloğunda işlenecektir.\n      return /*#__PURE__*/_jsxDEV(Adminpanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    } catch (error) {\n      setIsError(true);\n      return null;\n    }\n  };\n  if (redirectToAdminpanel) {\n    navigate('/Anasayfa');\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"admisgiris\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Kullan\\u0131c\\u0131 Ad\\u0131:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u015Eifre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hata olu\\u015Ftu.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminLogin, \"I7SBYKlClD+0Q3h9Xhk8uDx23pY=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["Adminpanel","React","useState","Routes","Route","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","username","setUsername","password","setPassword","redirectToAdminpanel","setRedirectToAdminpanel","isError","setIsError","navigate","handleSubmit","event","preventDefault","handleAdminPanelLoad","fileName","_jsxFileName","lineNumber","columnNumber","error","className","onSubmit","children","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/senaozturk/monjardinadmin/monjardinn/src/AdminLogin.js"],"sourcesContent":["import Adminpanel from './Home';\nimport React, { useState } from 'react';\nimport {Routes, Route, useNavigate} from 'react-router-dom';\n\nexport default function AdminLogin() {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirectToAdminpanel, setRedirectToAdminpanel] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const navigate = useNavigate();\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // burada, kullanıcı adı ve şifreyi bir API'ye gönderip doğrulayabilirsiniz\n    // bu örnekte, doğrulama her zaman başarılı olur\n    setRedirectToAdminpanel(true);\n  };\n\n  const handleAdminPanelLoad = () => {\n    try {\n      // Burada Adminpanel bileşenini yükleyebilirsiniz. Eğer bir hata oluşursa, catch bloğunda işlenecektir.\n      return <Adminpanel />\n    } catch (error) {\n      setIsError(true);\n      return null;\n    }\n  };\n\n  if (redirectToAdminpanel) {\n    navigate('/Anasayfa');\n  }\n  \n\n  return (\n    <form className='admisgiris'  onSubmit={handleSubmit}>\n      <label>\n        Kullanıcı Adı:\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n      </label>\n      <label>\n        Şifre:\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n      </label>\n      <button type=\"submit\">Giriş Yap</button>\n      {isError && <p>Hata oluştu.</p>}\n    </form>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,QAAQ;AAC/B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMgB,QAAQ,GAAGb,WAAW,EAAE;EAG9B,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA;IACAN,uBAAuB,CAAC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMO,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI;MACF;MACA,oBAAOf,OAAA,CAACP,UAAU;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,UAAU,CAAC,IAAI,CAAC;MAChB,OAAO,IAAI;IACb;EACF,CAAC;EAED,IAAIH,oBAAoB,EAAE;IACxBI,QAAQ,CAAC,WAAW,CAAC;EACvB;EAGA,oBACEX,OAAA;IAAMqB,SAAS,EAAC,YAAY;IAAEC,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBACnDvB,OAAA;MAAAuB,QAAA,GAAO,+BAEL,eAAAvB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,QAAS;QAChBuB,QAAQ,EAAGb,KAAK,IAAKT,WAAW,CAACS,KAAK,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRnB,OAAA;MAAAuB,QAAA,GAAO,aAEL,eAAAvB,OAAA;QACEwB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEpB,QAAS;QAChBqB,QAAQ,EAAGb,KAAK,IAAKP,WAAW,CAACO,KAAK,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRnB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACvCV,OAAO,iBAAIT,OAAA;MAAAuB,QAAA,EAAG;IAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1B;AAEX;AAACjB,EAAA,CArDuBD,UAAU;EAAA,QAMfH,WAAW;AAAA;AAAA8B,EAAA,GANN3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}